@model ProjectManager.ViewModels.ProjectViewModel

    <div id="boardContainer">
        @if (Model.Projects.Count > 0)
        {
            <div id="boardCategoryContainer">
                @for (int categoryIndex = 0; categoryIndex < Model.Categories.Count; categoryIndex++)
                {
                    <div class="board-category-drop-area" data-category-index="@categoryIndex"></div>

                    <div class="board-category" data-category-id="@Model.Categories[categoryIndex].CategoryId" data-category-index="@categoryIndex">
                        <div class="board-category-header">
                            <div class="board-category-name">@Model.Categories[categoryIndex].Name</div>
                            <button class="board-category-delete-button" type="button" onclick="deleteBoardCategory(@Model.Categories[categoryIndex].CategoryId)">x</button>
                        </div>
                        <div class="board-new-task-button-container">
                            <button class="add-task-to-board-button" onclick="toggleNewTaskForm(@categoryIndex)">+</button>
                        </div>
                        <div class="new-board-task-container hidden">
                            <textarea class="new-board-task-text-box"></textarea>
                        </div>

                        <div class="board-task-container">

                            @for (int taskIndex = 0; taskIndex < Model.Tasks[categoryIndex].Count; taskIndex++)
                            {
                                <div class="board-task-drop-area" data-task-index="@taskIndex"></div>

                                var task = Model.Tasks[categoryIndex][taskIndex];
                                var boardTaskClasses = "board-task";
                                if (task.IsCompleted)
                                {
                                    boardTaskClasses += " board-task-completed";
                                }

                                <div class="@boardTaskClasses" data-task-id="@task.TaskId" data-task-index="@taskIndex">
                                    <div class="board-task-left-section">
                                        <div class="board-task-priority task-priority" data-priority="@task.Priority"></div>
                                        <div class="board-task-second-row">
                                            @if (task.IsCompleted)
                                            {
                                                <div class="board-task-completed-icon">
                                                    <div>&#10003</div>
                                                </div>
                                            }
                                            <div class="board-task-name">@task.Name</div>
                                        </div>
                                        <div class="board-task-third-row">
                                            <div class="board-task-assignee" onclick="toggleBoardAssigneeSelectionContainer(@task.TaskId)">
                                                @if (task.AssignedUser != null)
                                                {
                                                    <div class="default-profile-pic">
                                                        <div>@task.AssignedUser.FirstName[0]@task.AssignedUser.LastName[0]</div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <input class="unassigned-user-icon" type="image" src="~/images/user.png" />
                                                }
                                            </div>
                                            <div class="board-task-due-date" onclick="toggleBoardDueDateSelectionContainer(@task.TaskId)">
                                                @if (@task.DueDateRangeStart.Date == new DateTime().Date)
                                                {
                                                    <input class="unassigned-due-date-icon" type="image" src="~/images/clock.png" />
                                                }
                                                else
                                                {
                                                    <div>@task.DueDateRangeStart.ToString("MMM d")</div>
                                                }
                                            </div>
                                        </div>
                                        <div class="board-task-fourth-row">
                                            @foreach (TagTask tagTask in task.TagTasks)
                                            {
                                                var tag = tagTask.Tag;

                                                <div class="board-task-tag color-option-@tag.ColorIndex" data-tag-id="@tag.TagId">@tag.Name</div>
                                            }
                                        </div>
                                    </div>
                                    <div class="board-task-right-section">
                                        <div class="board-task-delete-button" onclick="deleteBoardTask(@task.TaskId)">x</div>
                                    </div>
                                </div>
                            }
                            <div class="board-task-drop-area" data-task-index="@Model.Tasks[categoryIndex].Count"></div>
                            <div class="board-task-container-extra-height"></div>
                        </div>
                    </div>
                }
                <div class="board-category-drop-area" data-category-index="@Model.Categories.Count"></div>
                <div class="board-category" data-category-index="@Model.Categories.Count">
                    <div id="addBoardCategoryButton" onclick="toggleNewBoardCategoryForm()">+ Add category</div>
                    <input id="newCategoryNameTextBox" class="hidden" type="text" placeholder="Category Name" />
                </div>
                <div id="boardCategoryContainerExtraWidth"></div>
            </div>

            <div id="removeBoardCategoryAlert" class="hidden">
                Categories that have tasks attached cannot be removed
            </div>

            <div id="draggedCategoryCopy" class="hidden"></div>
            <div id="boardCategoryDropAreaIndicator"></div>
            <div id="draggedTaskCopy" class="hidden"></div>
            <div id="boardTaskDropAreaIndicator"></div>

            @Html.Partial("_NewProject")
            @Html.Partial("_TaskDetails")
            @Html.Partial("_UserSelection", @Model)
            @Html.Partial("_SetDueDate", @Model)
            @Html.Partial("_PrioritySelection", @Model)
            @Html.Partial("_TagSelection", @Model)
        }
    </div>
